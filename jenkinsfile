
node {
    def app

    stage('Clone repository') {
        checkout scm
    }

    stage('Update Argo') {
            script {
                catchError(buildResult: 'SUCCESS', stageResult: 'FAILURE') {
                    withCredentials([usernamePassword(credentialsId: 'github', passwordVariable: 'GIT_PASSWORD', usernameVariable: 'GIT_USERNAME')]) {
                        //def encodedPassword = URLEncoder.encode("$GIT_PASSWORD",'UTF-8')
                        sh "git config user.email 41437796+m0dularm1nd@users.noreply.github.com"
                        sh "git config user.name Jenkins"
                        sh "cat staging/0-deployment.yaml"
                        sh "sed -i 's+nx2.v3il.xyz/m0dularm1nd/cicd-api.*+nx2.v3il.xyz/m0dularm1nd/cicd-api:${DOCKERTAG}+g' staging/0-deployment.yaml"
                        sh "printf '##########################'"
                        sh "grep 'image:' staging/0-deployment.yaml -C 2"
                        sh "printf '##########################'"
                        sh "git add ."
                        sh "git commit -m 'Pulled from Private Nexus Repo, Commited by Jenkins... manifestVersion: ${env.BUILD_NUMBER}'"
                        sh 'git push https://${GIT_USERNAME}:${GIT_PASSWORD}@github.com/${GIT_USERNAME}/CICD-Manifest.git'
      }
    }
  }
}
    stage('Update Flux') {
            script {
                catchError(buildResult: 'SUCCESS', stageResult: 'FAILURE') {
                    withCredentials([usernamePassword(credentialsId: 'github', passwordVariable: 'GIT_PASSWORD', usernameVariable: 'GIT_USERNAME')]) {
                        //def encodedPassword = URLEncoder.encode("$GIT_PASSWORD",'UTF-8')
                        sh "git switch flux"
                        sh "cat staging/0-deployment.yaml"
                        sh "sed -i 's+nx2.v3il.xyz/m0dularm1nd/cicd-api.*+nx2.v3il.xyz/m0dularm1nd/cicd-api:${DOCKERTAG}+g' staging/0-deployment.yaml"
                        sh "printf '##########################'"
                        sh "grep 'image:' staging/0-deployment.yaml -C 2"
                        sh "printf '##########################'"
                        sh "git add ."
                        sh "git commit -m 'Pulled from Private Nexus Repo, Commited by Jenkins... manifestVersion: ${env.BUILD_NUMBER}'"
                        sh 'git push https://${GIT_USERNAME}:${GIT_PASSWORD}@github.com/${GIT_USERNAME}/CICD-Manifest.git'
      }
    }
  }
}
}
