---
apiVersion: v1
kind: Namespace
metadata:
  name: api-ns
---
apiVersion: secrets.hashicorp.com/v1beta1
kind: VaultAuth
metadata:
  name: static-auth
  namespace: api-ns
spec:
  # vaultConnectionRef: default
  method: kubernetes
  mount: kubernetes
  kubernetes:
    role: realm
    serviceAccount: default
    audiences:
      - vault
---
apiVersion: secrets.hashicorp.com/v1beta1
kind: VaultStaticSecret
metadata:
  namespace: api-ns
  name: vault-secret-nxs
spec:
  vaultAuthRef: static-auth
  mount: vso-engine
  type: kv-v2
  path: app1/nxs-cred-vso
  refreshAfter: 10s
  destination:
    create: true
    name: nxs-cred-vso
  rolloutRestartTargets:
  - kind: Deployment
    name: api-ops
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-ops
  namespace: api-ns
  labels:
    app.kubernetes.io/name: api-ops
spec:
  replicas: 1
  revisionHistoryLimit: 3
  selector:
    matchLabels:
      app.kubernetes.io/name: api-ops
  template:
    metadata:
      labels:
        app.kubernetes.io/name: api-ops
    spec:
      containers:
        - name: api-ops
          image: nx2.v3il.xyz/m0dularm1nd/cicd-api:89
      imagePullSecrets:
      - name: nxs-cred-vso

---
apiVersion: v1
kind: Service
metadata:
  name: api-ops-svc
  namespace: api-ns
  labels:
    app.kubernetes.io/name: api-ops
spec:
  selector:
    app.kubernetes.io/name: api-ops
  ports:
    - name: http
      port: 80
      protocol: TCP
      targetPort: 3000
---
#
# apiVersion: networking.k8s.io/v1
# kind: Ingress
# metadata:
#   name: api-ops-ingress
#   namespace: api-ns
#   annotations:
#     cert-manager.io/cluster-issuer: lets-encrypt
# spec:
#   tls:
#     - hosts:
#         - api.v3il.xyz
#       secretName: api-ingress-tls
#   rules:
#     - host: api.v3il.xyz
#       http:
#         paths:
#           - backend:
#               service:
#                 name: api-ops-svc
#                 port:
#                   number: 80
#             path: /
#             pathType: Prefix
# ---
